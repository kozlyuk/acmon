version: '3.8'
services:

#########
# REDIS #
#########

#   redis:
#     restart: always
#     image: "redis:4-alpine"
#     ports:
#       - "6379:6379"
#     network_mode: host

###########
# BACKEND #
###########

  acmon_back:
    restart: always
    # build: .
    image: &img kozlyuk/acmon:acmon_back_latest
    container_name: acmon_back
    ports:
      - "8000:8000"
    # command: ['gunicorn', '--bind', '0.0.0.0:8000', 'appart.wsgi:application',
    #   '--worker-tmp-dir', '/dev/shm', '--workers', '2',
    #   '--threads', '4', '--worker-class', 'gthread']
    command: ['python', 'manage.py', 'runserver']
    network_mode: host
    env_file:
      - .env
    volumes:
      - ./media:/home/acmon/media
    entrypoint: ['/home/acmon/entrypoint.sh']

##############
# IOT SERVER #
##############

  acmon_iot:
    restart: always
    # build: ../iot-python-server/
    image: kozlyuk/acmon:acmon_iot_latest
    container_name: acmon_iot
    ports:
      - "12900:12900"
    command: ['python', '-u', '/home/app/server.py']
    network_mode: host
    env_file:
      - .env

############
# FRONTEND #
############

  acmon_front:
    image: kozlyuk/acmon:acmon_front_latest
    command: ['npm', 'start']
    # command: [nginx, '-g', 'daemon off;']
    container_name: acmon_front
    ports:
      - 3000:3000
    network_mode: host
    volumes:
      - ./.env_front:/app/.env
    depends_on:
      - acmon_back


###############
# CELERY BEAT #
###############

  celery_beat:
    restart: always
    image: *img
    container_name: acmon_celery_beat
    command: celery -A acmon worker --beat -l info -S django
    env_file:
      - .env
    network_mode: host
